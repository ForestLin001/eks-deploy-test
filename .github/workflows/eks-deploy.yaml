# This workflow will build and deploy a Python and Go application to EKS

# Required secrets to be added in GitHub repository Settings → Secrets and variables → Actions:
#
# Name                   Description
# AWS_ACCOUNT_ID         Your AWS Account ID
# AWS_REGION             Your AWS Region
# AWS_GITHUB_ROLE_ARN    GitHub OIDC Role ARN output from terraform apply
#
# Example:
#   AWS_ACCOUNT_ID=123456789012
#   AWS_REGION=ap-southeast-1
#   AWS_GITHUB_ROLE_ARN=arn:aws:iam::123456789012:role/aurion-github-actions-role
#
# Usage:
# Push changes to main branch, GitHub Actions will automatically:
#   - Login to ECR
#   - Build and push images
#   - Deploy to EKS
# You can also manually trigger via "Run workflow" in GitHub Web interface.

name: Build & Deploy via Makefile

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: '部署环境 (dev/test/prod)'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - test
        - prod

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash  # 明确指定使用 bash
    permissions:
      id-token: write
      contents: read
    # 根据触发方式和分支确定环境
    environment: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'prod' || (github.ref == 'refs/heads/test' && 'test' || 'dev')) }}
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_GITHUB_ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      run: make login-ecr

    - name: Build & Push Python Image
      run: make push-python-service

    - name: Build & Push Go Image
      run: make push-go-service

    - name: Deploy to EKS
      run: make deploy-test
